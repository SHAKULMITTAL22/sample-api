# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.get_account_data_accounts import GetAccountDataAccounts  # noqa: F401,E501
from swagger_server import util


class GetAccountData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: float=None, accounts: List[GetAccountDataAccounts]=None):  # noqa: E501
        """GetAccountData - a model defined in Swagger

        :param customer_id: The customer_id of this GetAccountData.  # noqa: E501
        :type customer_id: float
        :param accounts: The accounts of this GetAccountData.  # noqa: E501
        :type accounts: List[GetAccountDataAccounts]
        """
        self.swagger_types = {
            'customer_id': float,
            'accounts': List[GetAccountDataAccounts]
        }

        self.attribute_map = {
            'customer_id': 'customerId',
            'accounts': 'accounts'
        }
        self._customer_id = customer_id
        self._accounts = accounts

    @classmethod
    def from_dict(cls, dikt) -> 'GetAccountData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getAccountData of this GetAccountData.  # noqa: E501
        :rtype: GetAccountData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this GetAccountData.


        :return: The customer_id of this GetAccountData.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this GetAccountData.


        :param customer_id: The customer_id of this GetAccountData.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def accounts(self) -> List[GetAccountDataAccounts]:
        """Gets the accounts of this GetAccountData.


        :return: The accounts of this GetAccountData.
        :rtype: List[GetAccountDataAccounts]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts: List[GetAccountDataAccounts]):
        """Sets the accounts of this GetAccountData.


        :param accounts: The accounts of this GetAccountData.
        :type accounts: List[GetAccountDataAccounts]
        """

        self._accounts = accounts
