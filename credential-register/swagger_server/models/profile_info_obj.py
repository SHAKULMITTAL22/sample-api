# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProfileInfoObj(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: str=None, account_number: str=None, ssn: str=None):  # noqa: E501
        """ProfileInfoObj - a model defined in Swagger

        :param customer_id: The customer_id of this ProfileInfoObj.  # noqa: E501
        :type customer_id: str
        :param account_number: The account_number of this ProfileInfoObj.  # noqa: E501
        :type account_number: str
        :param ssn: The ssn of this ProfileInfoObj.  # noqa: E501
        :type ssn: str
        """
        self.swagger_types = {
            'customer_id': str,
            'account_number': str,
            'ssn': str
        }

        self.attribute_map = {
            'customer_id': 'customerId',
            'account_number': 'accountNumber',
            'ssn': 'ssn'
        }
        self._customer_id = customer_id
        self._account_number = account_number
        self._ssn = ssn

    @classmethod
    def from_dict(cls, dikt) -> 'ProfileInfoObj':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The profileInfoObj of this ProfileInfoObj.  # noqa: E501
        :rtype: ProfileInfoObj
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> str:
        """Gets the customer_id of this ProfileInfoObj.


        :return: The customer_id of this ProfileInfoObj.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: str):
        """Sets the customer_id of this ProfileInfoObj.


        :param customer_id: The customer_id of this ProfileInfoObj.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def account_number(self) -> str:
        """Gets the account_number of this ProfileInfoObj.


        :return: The account_number of this ProfileInfoObj.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this ProfileInfoObj.


        :param account_number: The account_number of this ProfileInfoObj.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def ssn(self) -> str:
        """Gets the ssn of this ProfileInfoObj.


        :return: The ssn of this ProfileInfoObj.
        :rtype: str
        """
        return self._ssn

    @ssn.setter
    def ssn(self, ssn: str):
        """Sets the ssn of this ProfileInfoObj.


        :param ssn: The ssn of this ProfileInfoObj.
        :type ssn: str
        """

        self._ssn = ssn
