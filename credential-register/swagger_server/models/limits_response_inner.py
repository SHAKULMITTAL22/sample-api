# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.limits_response_inner_purchase import LimitsResponseInnerPurchase  # noqa: F401,E501
from swagger_server.models.limits_response_inner_txns_per_day import LimitsResponseInnerTxnsPerDay  # noqa: F401,E501
from swagger_server import util


class LimitsResponseInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, account_name: str=None, account_nickname: str=None, account_number: str=None, account_type: str=None, balance: str=None, card_name: str=None, card_number: str=None, currency: str=None, customer_id: float=None, per_txn: float=None, status: str=None, available_cash_limit: float=None, credit_limit: float=None, available_credit: float=None, purchase: LimitsResponseInnerPurchase=None, txns_per_day: LimitsResponseInnerTxnsPerDay=None, withdrawal: LimitsResponseInnerPurchase=None):  # noqa: E501
        """LimitsResponseInner - a model defined in Swagger

        :param account_name: The account_name of this LimitsResponseInner.  # noqa: E501
        :type account_name: str
        :param account_nickname: The account_nickname of this LimitsResponseInner.  # noqa: E501
        :type account_nickname: str
        :param account_number: The account_number of this LimitsResponseInner.  # noqa: E501
        :type account_number: str
        :param account_type: The account_type of this LimitsResponseInner.  # noqa: E501
        :type account_type: str
        :param balance: The balance of this LimitsResponseInner.  # noqa: E501
        :type balance: str
        :param card_name: The card_name of this LimitsResponseInner.  # noqa: E501
        :type card_name: str
        :param card_number: The card_number of this LimitsResponseInner.  # noqa: E501
        :type card_number: str
        :param currency: The currency of this LimitsResponseInner.  # noqa: E501
        :type currency: str
        :param customer_id: The customer_id of this LimitsResponseInner.  # noqa: E501
        :type customer_id: float
        :param per_txn: The per_txn of this LimitsResponseInner.  # noqa: E501
        :type per_txn: float
        :param status: The status of this LimitsResponseInner.  # noqa: E501
        :type status: str
        :param available_cash_limit: The available_cash_limit of this LimitsResponseInner.  # noqa: E501
        :type available_cash_limit: float
        :param credit_limit: The credit_limit of this LimitsResponseInner.  # noqa: E501
        :type credit_limit: float
        :param available_credit: The available_credit of this LimitsResponseInner.  # noqa: E501
        :type available_credit: float
        :param purchase: The purchase of this LimitsResponseInner.  # noqa: E501
        :type purchase: LimitsResponseInnerPurchase
        :param txns_per_day: The txns_per_day of this LimitsResponseInner.  # noqa: E501
        :type txns_per_day: LimitsResponseInnerTxnsPerDay
        :param withdrawal: The withdrawal of this LimitsResponseInner.  # noqa: E501
        :type withdrawal: LimitsResponseInnerPurchase
        """
        self.swagger_types = {
            'account_name': str,
            'account_nickname': str,
            'account_number': str,
            'account_type': str,
            'balance': str,
            'card_name': str,
            'card_number': str,
            'currency': str,
            'customer_id': float,
            'per_txn': float,
            'status': str,
            'available_cash_limit': float,
            'credit_limit': float,
            'available_credit': float,
            'purchase': LimitsResponseInnerPurchase,
            'txns_per_day': LimitsResponseInnerTxnsPerDay,
            'withdrawal': LimitsResponseInnerPurchase
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'account_nickname': 'accountNickname',
            'account_number': 'accountNumber',
            'account_type': 'accountType',
            'balance': 'balance',
            'card_name': 'cardName',
            'card_number': 'cardNumber',
            'currency': 'currency',
            'customer_id': 'customerId',
            'per_txn': 'perTxn',
            'status': 'status',
            'available_cash_limit': 'availableCashLimit',
            'credit_limit': 'creditLimit',
            'available_credit': 'availableCredit',
            'purchase': 'purchase',
            'txns_per_day': 'txnsPerDay',
            'withdrawal': 'withdrawal'
        }
        self._account_name = account_name
        self._account_nickname = account_nickname
        self._account_number = account_number
        self._account_type = account_type
        self._balance = balance
        self._card_name = card_name
        self._card_number = card_number
        self._currency = currency
        self._customer_id = customer_id
        self._per_txn = per_txn
        self._status = status
        self._available_cash_limit = available_cash_limit
        self._credit_limit = credit_limit
        self._available_credit = available_credit
        self._purchase = purchase
        self._txns_per_day = txns_per_day
        self._withdrawal = withdrawal

    @classmethod
    def from_dict(cls, dikt) -> 'LimitsResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The limitsResponse_inner of this LimitsResponseInner.  # noqa: E501
        :rtype: LimitsResponseInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self) -> str:
        """Gets the account_name of this LimitsResponseInner.


        :return: The account_name of this LimitsResponseInner.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name: str):
        """Sets the account_name of this LimitsResponseInner.


        :param account_name: The account_name of this LimitsResponseInner.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def account_nickname(self) -> str:
        """Gets the account_nickname of this LimitsResponseInner.


        :return: The account_nickname of this LimitsResponseInner.
        :rtype: str
        """
        return self._account_nickname

    @account_nickname.setter
    def account_nickname(self, account_nickname: str):
        """Sets the account_nickname of this LimitsResponseInner.


        :param account_nickname: The account_nickname of this LimitsResponseInner.
        :type account_nickname: str
        """

        self._account_nickname = account_nickname

    @property
    def account_number(self) -> str:
        """Gets the account_number of this LimitsResponseInner.


        :return: The account_number of this LimitsResponseInner.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this LimitsResponseInner.


        :param account_number: The account_number of this LimitsResponseInner.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def account_type(self) -> str:
        """Gets the account_type of this LimitsResponseInner.


        :return: The account_type of this LimitsResponseInner.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type: str):
        """Sets the account_type of this LimitsResponseInner.


        :param account_type: The account_type of this LimitsResponseInner.
        :type account_type: str
        """

        self._account_type = account_type

    @property
    def balance(self) -> str:
        """Gets the balance of this LimitsResponseInner.


        :return: The balance of this LimitsResponseInner.
        :rtype: str
        """
        return self._balance

    @balance.setter
    def balance(self, balance: str):
        """Sets the balance of this LimitsResponseInner.


        :param balance: The balance of this LimitsResponseInner.
        :type balance: str
        """

        self._balance = balance

    @property
    def card_name(self) -> str:
        """Gets the card_name of this LimitsResponseInner.


        :return: The card_name of this LimitsResponseInner.
        :rtype: str
        """
        return self._card_name

    @card_name.setter
    def card_name(self, card_name: str):
        """Sets the card_name of this LimitsResponseInner.


        :param card_name: The card_name of this LimitsResponseInner.
        :type card_name: str
        """

        self._card_name = card_name

    @property
    def card_number(self) -> str:
        """Gets the card_number of this LimitsResponseInner.


        :return: The card_number of this LimitsResponseInner.
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number: str):
        """Sets the card_number of this LimitsResponseInner.


        :param card_number: The card_number of this LimitsResponseInner.
        :type card_number: str
        """

        self._card_number = card_number

    @property
    def currency(self) -> str:
        """Gets the currency of this LimitsResponseInner.


        :return: The currency of this LimitsResponseInner.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this LimitsResponseInner.


        :param currency: The currency of this LimitsResponseInner.
        :type currency: str
        """

        self._currency = currency

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this LimitsResponseInner.


        :return: The customer_id of this LimitsResponseInner.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this LimitsResponseInner.


        :param customer_id: The customer_id of this LimitsResponseInner.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def per_txn(self) -> float:
        """Gets the per_txn of this LimitsResponseInner.


        :return: The per_txn of this LimitsResponseInner.
        :rtype: float
        """
        return self._per_txn

    @per_txn.setter
    def per_txn(self, per_txn: float):
        """Sets the per_txn of this LimitsResponseInner.


        :param per_txn: The per_txn of this LimitsResponseInner.
        :type per_txn: float
        """

        self._per_txn = per_txn

    @property
    def status(self) -> str:
        """Gets the status of this LimitsResponseInner.


        :return: The status of this LimitsResponseInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this LimitsResponseInner.


        :param status: The status of this LimitsResponseInner.
        :type status: str
        """

        self._status = status

    @property
    def available_cash_limit(self) -> float:
        """Gets the available_cash_limit of this LimitsResponseInner.


        :return: The available_cash_limit of this LimitsResponseInner.
        :rtype: float
        """
        return self._available_cash_limit

    @available_cash_limit.setter
    def available_cash_limit(self, available_cash_limit: float):
        """Sets the available_cash_limit of this LimitsResponseInner.


        :param available_cash_limit: The available_cash_limit of this LimitsResponseInner.
        :type available_cash_limit: float
        """

        self._available_cash_limit = available_cash_limit

    @property
    def credit_limit(self) -> float:
        """Gets the credit_limit of this LimitsResponseInner.


        :return: The credit_limit of this LimitsResponseInner.
        :rtype: float
        """
        return self._credit_limit

    @credit_limit.setter
    def credit_limit(self, credit_limit: float):
        """Sets the credit_limit of this LimitsResponseInner.


        :param credit_limit: The credit_limit of this LimitsResponseInner.
        :type credit_limit: float
        """

        self._credit_limit = credit_limit

    @property
    def available_credit(self) -> float:
        """Gets the available_credit of this LimitsResponseInner.


        :return: The available_credit of this LimitsResponseInner.
        :rtype: float
        """
        return self._available_credit

    @available_credit.setter
    def available_credit(self, available_credit: float):
        """Sets the available_credit of this LimitsResponseInner.


        :param available_credit: The available_credit of this LimitsResponseInner.
        :type available_credit: float
        """

        self._available_credit = available_credit

    @property
    def purchase(self) -> LimitsResponseInnerPurchase:
        """Gets the purchase of this LimitsResponseInner.


        :return: The purchase of this LimitsResponseInner.
        :rtype: LimitsResponseInnerPurchase
        """
        return self._purchase

    @purchase.setter
    def purchase(self, purchase: LimitsResponseInnerPurchase):
        """Sets the purchase of this LimitsResponseInner.


        :param purchase: The purchase of this LimitsResponseInner.
        :type purchase: LimitsResponseInnerPurchase
        """

        self._purchase = purchase

    @property
    def txns_per_day(self) -> LimitsResponseInnerTxnsPerDay:
        """Gets the txns_per_day of this LimitsResponseInner.


        :return: The txns_per_day of this LimitsResponseInner.
        :rtype: LimitsResponseInnerTxnsPerDay
        """
        return self._txns_per_day

    @txns_per_day.setter
    def txns_per_day(self, txns_per_day: LimitsResponseInnerTxnsPerDay):
        """Sets the txns_per_day of this LimitsResponseInner.


        :param txns_per_day: The txns_per_day of this LimitsResponseInner.
        :type txns_per_day: LimitsResponseInnerTxnsPerDay
        """

        self._txns_per_day = txns_per_day

    @property
    def withdrawal(self) -> LimitsResponseInnerPurchase:
        """Gets the withdrawal of this LimitsResponseInner.


        :return: The withdrawal of this LimitsResponseInner.
        :rtype: LimitsResponseInnerPurchase
        """
        return self._withdrawal

    @withdrawal.setter
    def withdrawal(self, withdrawal: LimitsResponseInnerPurchase):
        """Sets the withdrawal of this LimitsResponseInner.


        :param withdrawal: The withdrawal of this LimitsResponseInner.
        :type withdrawal: LimitsResponseInnerPurchase
        """

        self._withdrawal = withdrawal
