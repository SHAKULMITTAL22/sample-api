# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LocateProfileRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: str=None, ss_number: str=None, ssn_short: str=None, account_number: str=None):  # noqa: E501
        """LocateProfileRequest - a model defined in Swagger

        :param customer_id: The customer_id of this LocateProfileRequest.  # noqa: E501
        :type customer_id: str
        :param ss_number: The ss_number of this LocateProfileRequest.  # noqa: E501
        :type ss_number: str
        :param ssn_short: The ssn_short of this LocateProfileRequest.  # noqa: E501
        :type ssn_short: str
        :param account_number: The account_number of this LocateProfileRequest.  # noqa: E501
        :type account_number: str
        """
        self.swagger_types = {
            'customer_id': str,
            'ss_number': str,
            'ssn_short': str,
            'account_number': str
        }

        self.attribute_map = {
            'customer_id': 'customerId',
            'ss_number': 'ssNumber',
            'ssn_short': 'ssnShort',
            'account_number': 'accountNumber'
        }
        self._customer_id = customer_id
        self._ss_number = ss_number
        self._ssn_short = ssn_short
        self._account_number = account_number

    @classmethod
    def from_dict(cls, dikt) -> 'LocateProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The locateProfileRequest of this LocateProfileRequest.  # noqa: E501
        :rtype: LocateProfileRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> str:
        """Gets the customer_id of this LocateProfileRequest.


        :return: The customer_id of this LocateProfileRequest.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: str):
        """Sets the customer_id of this LocateProfileRequest.


        :param customer_id: The customer_id of this LocateProfileRequest.
        :type customer_id: str
        """
        if customer_id is None:
            raise ValueError("Invalid value for `customer_id`, must not be `None`")  # noqa: E501

        self._customer_id = customer_id

    @property
    def ss_number(self) -> str:
        """Gets the ss_number of this LocateProfileRequest.


        :return: The ss_number of this LocateProfileRequest.
        :rtype: str
        """
        return self._ss_number

    @ss_number.setter
    def ss_number(self, ss_number: str):
        """Sets the ss_number of this LocateProfileRequest.


        :param ss_number: The ss_number of this LocateProfileRequest.
        :type ss_number: str
        """
        if ss_number is None:
            raise ValueError("Invalid value for `ss_number`, must not be `None`")  # noqa: E501

        self._ss_number = ss_number

    @property
    def ssn_short(self) -> str:
        """Gets the ssn_short of this LocateProfileRequest.


        :return: The ssn_short of this LocateProfileRequest.
        :rtype: str
        """
        return self._ssn_short

    @ssn_short.setter
    def ssn_short(self, ssn_short: str):
        """Sets the ssn_short of this LocateProfileRequest.


        :param ssn_short: The ssn_short of this LocateProfileRequest.
        :type ssn_short: str
        """
        if ssn_short is None:
            raise ValueError("Invalid value for `ssn_short`, must not be `None`")  # noqa: E501

        self._ssn_short = ssn_short

    @property
    def account_number(self) -> str:
        """Gets the account_number of this LocateProfileRequest.


        :return: The account_number of this LocateProfileRequest.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this LocateProfileRequest.


        :param account_number: The account_number of this LocateProfileRequest.
        :type account_number: str
        """
        if account_number is None:
            raise ValueError("Invalid value for `account_number`, must not be `None`")  # noqa: E501

        self._account_number = account_number
