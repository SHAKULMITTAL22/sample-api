# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.get_customer_data_personal_banker import GetCustomerDataPersonalBanker  # noqa: F401,E501
from swagger_server import util


class GetCustomerData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, alternate_phone_number: float=None, customer_id: str=None, email: str=None, identification_number: float=None, identification_type: str=None, image: str=None, is_alternate_mobile_number: bool=None, is_primary_mobile_number: bool=None, location: str=None, name: str=None, first_name: str=None, last_name: str=None, personal_banker: GetCustomerDataPersonalBanker=None, phone: float=None, security_questions: List[str]=None, segment_id: float=None):  # noqa: E501
        """GetCustomerData - a model defined in Swagger

        :param alternate_phone_number: The alternate_phone_number of this GetCustomerData.  # noqa: E501
        :type alternate_phone_number: float
        :param customer_id: The customer_id of this GetCustomerData.  # noqa: E501
        :type customer_id: str
        :param email: The email of this GetCustomerData.  # noqa: E501
        :type email: str
        :param identification_number: The identification_number of this GetCustomerData.  # noqa: E501
        :type identification_number: float
        :param identification_type: The identification_type of this GetCustomerData.  # noqa: E501
        :type identification_type: str
        :param image: The image of this GetCustomerData.  # noqa: E501
        :type image: str
        :param is_alternate_mobile_number: The is_alternate_mobile_number of this GetCustomerData.  # noqa: E501
        :type is_alternate_mobile_number: bool
        :param is_primary_mobile_number: The is_primary_mobile_number of this GetCustomerData.  # noqa: E501
        :type is_primary_mobile_number: bool
        :param location: The location of this GetCustomerData.  # noqa: E501
        :type location: str
        :param name: The name of this GetCustomerData.  # noqa: E501
        :type name: str
        :param first_name: The first_name of this GetCustomerData.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this GetCustomerData.  # noqa: E501
        :type last_name: str
        :param personal_banker: The personal_banker of this GetCustomerData.  # noqa: E501
        :type personal_banker: GetCustomerDataPersonalBanker
        :param phone: The phone of this GetCustomerData.  # noqa: E501
        :type phone: float
        :param security_questions: The security_questions of this GetCustomerData.  # noqa: E501
        :type security_questions: List[str]
        :param segment_id: The segment_id of this GetCustomerData.  # noqa: E501
        :type segment_id: float
        """
        self.swagger_types = {
            'alternate_phone_number': float,
            'customer_id': str,
            'email': str,
            'identification_number': float,
            'identification_type': str,
            'image': str,
            'is_alternate_mobile_number': bool,
            'is_primary_mobile_number': bool,
            'location': str,
            'name': str,
            'first_name': str,
            'last_name': str,
            'personal_banker': GetCustomerDataPersonalBanker,
            'phone': float,
            'security_questions': List[str],
            'segment_id': float
        }

        self.attribute_map = {
            'alternate_phone_number': 'alternatePhoneNumber',
            'customer_id': 'customerId',
            'email': 'email',
            'identification_number': 'identificationNumber',
            'identification_type': 'identificationType',
            'image': 'image',
            'is_alternate_mobile_number': 'isAlternateMobileNumber',
            'is_primary_mobile_number': 'isPrimaryMobileNumber',
            'location': 'location',
            'name': 'name',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'personal_banker': 'personalBanker',
            'phone': 'phone',
            'security_questions': 'securityQuestions',
            'segment_id': 'segmentId'
        }
        self._alternate_phone_number = alternate_phone_number
        self._customer_id = customer_id
        self._email = email
        self._identification_number = identification_number
        self._identification_type = identification_type
        self._image = image
        self._is_alternate_mobile_number = is_alternate_mobile_number
        self._is_primary_mobile_number = is_primary_mobile_number
        self._location = location
        self._name = name
        self._first_name = first_name
        self._last_name = last_name
        self._personal_banker = personal_banker
        self._phone = phone
        self._security_questions = security_questions
        self._segment_id = segment_id

    @classmethod
    def from_dict(cls, dikt) -> 'GetCustomerData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetCustomerData of this GetCustomerData.  # noqa: E501
        :rtype: GetCustomerData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternate_phone_number(self) -> float:
        """Gets the alternate_phone_number of this GetCustomerData.


        :return: The alternate_phone_number of this GetCustomerData.
        :rtype: float
        """
        return self._alternate_phone_number

    @alternate_phone_number.setter
    def alternate_phone_number(self, alternate_phone_number: float):
        """Sets the alternate_phone_number of this GetCustomerData.


        :param alternate_phone_number: The alternate_phone_number of this GetCustomerData.
        :type alternate_phone_number: float
        """

        self._alternate_phone_number = alternate_phone_number

    @property
    def customer_id(self) -> str:
        """Gets the customer_id of this GetCustomerData.


        :return: The customer_id of this GetCustomerData.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: str):
        """Sets the customer_id of this GetCustomerData.


        :param customer_id: The customer_id of this GetCustomerData.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def email(self) -> str:
        """Gets the email of this GetCustomerData.


        :return: The email of this GetCustomerData.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this GetCustomerData.


        :param email: The email of this GetCustomerData.
        :type email: str
        """

        self._email = email

    @property
    def identification_number(self) -> float:
        """Gets the identification_number of this GetCustomerData.


        :return: The identification_number of this GetCustomerData.
        :rtype: float
        """
        return self._identification_number

    @identification_number.setter
    def identification_number(self, identification_number: float):
        """Sets the identification_number of this GetCustomerData.


        :param identification_number: The identification_number of this GetCustomerData.
        :type identification_number: float
        """

        self._identification_number = identification_number

    @property
    def identification_type(self) -> str:
        """Gets the identification_type of this GetCustomerData.


        :return: The identification_type of this GetCustomerData.
        :rtype: str
        """
        return self._identification_type

    @identification_type.setter
    def identification_type(self, identification_type: str):
        """Sets the identification_type of this GetCustomerData.


        :param identification_type: The identification_type of this GetCustomerData.
        :type identification_type: str
        """

        self._identification_type = identification_type

    @property
    def image(self) -> str:
        """Gets the image of this GetCustomerData.


        :return: The image of this GetCustomerData.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this GetCustomerData.


        :param image: The image of this GetCustomerData.
        :type image: str
        """

        self._image = image

    @property
    def is_alternate_mobile_number(self) -> bool:
        """Gets the is_alternate_mobile_number of this GetCustomerData.


        :return: The is_alternate_mobile_number of this GetCustomerData.
        :rtype: bool
        """
        return self._is_alternate_mobile_number

    @is_alternate_mobile_number.setter
    def is_alternate_mobile_number(self, is_alternate_mobile_number: bool):
        """Sets the is_alternate_mobile_number of this GetCustomerData.


        :param is_alternate_mobile_number: The is_alternate_mobile_number of this GetCustomerData.
        :type is_alternate_mobile_number: bool
        """

        self._is_alternate_mobile_number = is_alternate_mobile_number

    @property
    def is_primary_mobile_number(self) -> bool:
        """Gets the is_primary_mobile_number of this GetCustomerData.


        :return: The is_primary_mobile_number of this GetCustomerData.
        :rtype: bool
        """
        return self._is_primary_mobile_number

    @is_primary_mobile_number.setter
    def is_primary_mobile_number(self, is_primary_mobile_number: bool):
        """Sets the is_primary_mobile_number of this GetCustomerData.


        :param is_primary_mobile_number: The is_primary_mobile_number of this GetCustomerData.
        :type is_primary_mobile_number: bool
        """

        self._is_primary_mobile_number = is_primary_mobile_number

    @property
    def location(self) -> str:
        """Gets the location of this GetCustomerData.


        :return: The location of this GetCustomerData.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this GetCustomerData.


        :param location: The location of this GetCustomerData.
        :type location: str
        """

        self._location = location

    @property
    def name(self) -> str:
        """Gets the name of this GetCustomerData.


        :return: The name of this GetCustomerData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this GetCustomerData.


        :param name: The name of this GetCustomerData.
        :type name: str
        """

        self._name = name

    @property
    def first_name(self) -> str:
        """Gets the first_name of this GetCustomerData.


        :return: The first_name of this GetCustomerData.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this GetCustomerData.


        :param first_name: The first_name of this GetCustomerData.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this GetCustomerData.


        :return: The last_name of this GetCustomerData.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this GetCustomerData.


        :param last_name: The last_name of this GetCustomerData.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def personal_banker(self) -> GetCustomerDataPersonalBanker:
        """Gets the personal_banker of this GetCustomerData.


        :return: The personal_banker of this GetCustomerData.
        :rtype: GetCustomerDataPersonalBanker
        """
        return self._personal_banker

    @personal_banker.setter
    def personal_banker(self, personal_banker: GetCustomerDataPersonalBanker):
        """Sets the personal_banker of this GetCustomerData.


        :param personal_banker: The personal_banker of this GetCustomerData.
        :type personal_banker: GetCustomerDataPersonalBanker
        """

        self._personal_banker = personal_banker

    @property
    def phone(self) -> float:
        """Gets the phone of this GetCustomerData.


        :return: The phone of this GetCustomerData.
        :rtype: float
        """
        return self._phone

    @phone.setter
    def phone(self, phone: float):
        """Sets the phone of this GetCustomerData.


        :param phone: The phone of this GetCustomerData.
        :type phone: float
        """

        self._phone = phone

    @property
    def security_questions(self) -> List[str]:
        """Gets the security_questions of this GetCustomerData.


        :return: The security_questions of this GetCustomerData.
        :rtype: List[str]
        """
        return self._security_questions

    @security_questions.setter
    def security_questions(self, security_questions: List[str]):
        """Sets the security_questions of this GetCustomerData.


        :param security_questions: The security_questions of this GetCustomerData.
        :type security_questions: List[str]
        """

        self._security_questions = security_questions

    @property
    def segment_id(self) -> float:
        """Gets the segment_id of this GetCustomerData.


        :return: The segment_id of this GetCustomerData.
        :rtype: float
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id: float):
        """Sets the segment_id of this GetCustomerData.


        :param segment_id: The segment_id of this GetCustomerData.
        :type segment_id: float
        """

        self._segment_id = segment_id
