# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Existinguser(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, source_pin: str=None, target_pin: str=None):  # noqa: E501
        """Existinguser - a model defined in Swagger

        :param source_pin: The source_pin of this Existinguser.  # noqa: E501
        :type source_pin: str
        :param target_pin: The target_pin of this Existinguser.  # noqa: E501
        :type target_pin: str
        """
        self.swagger_types = {
            'source_pin': str,
            'target_pin': str
        }

        self.attribute_map = {
            'source_pin': 'sourcePin',
            'target_pin': 'targetPin'
        }
        self._source_pin = source_pin
        self._target_pin = target_pin

    @classmethod
    def from_dict(cls, dikt) -> 'Existinguser':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The existinguser of this Existinguser.  # noqa: E501
        :rtype: Existinguser
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_pin(self) -> str:
        """Gets the source_pin of this Existinguser.


        :return: The source_pin of this Existinguser.
        :rtype: str
        """
        return self._source_pin

    @source_pin.setter
    def source_pin(self, source_pin: str):
        """Sets the source_pin of this Existinguser.


        :param source_pin: The source_pin of this Existinguser.
        :type source_pin: str
        """

        self._source_pin = source_pin

    @property
    def target_pin(self) -> str:
        """Gets the target_pin of this Existinguser.


        :return: The target_pin of this Existinguser.
        :rtype: str
        """
        return self._target_pin

    @target_pin.setter
    def target_pin(self, target_pin: str):
        """Sets the target_pin of this Existinguser.


        :param target_pin: The target_pin of this Existinguser.
        :type target_pin: str
        """

        self._target_pin = target_pin
