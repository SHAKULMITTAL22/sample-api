# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LimitsResponseInnerPurchaseTransactionsMonthly(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, available: float=None, maximum: float=None, usedup: float=None):  # noqa: E501
        """LimitsResponseInnerPurchaseTransactionsMonthly - a model defined in Swagger

        :param available: The available of this LimitsResponseInnerPurchaseTransactionsMonthly.  # noqa: E501
        :type available: float
        :param maximum: The maximum of this LimitsResponseInnerPurchaseTransactionsMonthly.  # noqa: E501
        :type maximum: float
        :param usedup: The usedup of this LimitsResponseInnerPurchaseTransactionsMonthly.  # noqa: E501
        :type usedup: float
        """
        self.swagger_types = {
            'available': float,
            'maximum': float,
            'usedup': float
        }

        self.attribute_map = {
            'available': 'available',
            'maximum': 'maximum',
            'usedup': 'usedup'
        }
        self._available = available
        self._maximum = maximum
        self._usedup = usedup

    @classmethod
    def from_dict(cls, dikt) -> 'LimitsResponseInnerPurchaseTransactionsMonthly':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The limitsResponse_inner_purchase_transactions_monthly of this LimitsResponseInnerPurchaseTransactionsMonthly.  # noqa: E501
        :rtype: LimitsResponseInnerPurchaseTransactionsMonthly
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self) -> float:
        """Gets the available of this LimitsResponseInnerPurchaseTransactionsMonthly.


        :return: The available of this LimitsResponseInnerPurchaseTransactionsMonthly.
        :rtype: float
        """
        return self._available

    @available.setter
    def available(self, available: float):
        """Sets the available of this LimitsResponseInnerPurchaseTransactionsMonthly.


        :param available: The available of this LimitsResponseInnerPurchaseTransactionsMonthly.
        :type available: float
        """

        self._available = available

    @property
    def maximum(self) -> float:
        """Gets the maximum of this LimitsResponseInnerPurchaseTransactionsMonthly.


        :return: The maximum of this LimitsResponseInnerPurchaseTransactionsMonthly.
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum: float):
        """Sets the maximum of this LimitsResponseInnerPurchaseTransactionsMonthly.


        :param maximum: The maximum of this LimitsResponseInnerPurchaseTransactionsMonthly.
        :type maximum: float
        """

        self._maximum = maximum

    @property
    def usedup(self) -> float:
        """Gets the usedup of this LimitsResponseInnerPurchaseTransactionsMonthly.


        :return: The usedup of this LimitsResponseInnerPurchaseTransactionsMonthly.
        :rtype: float
        """
        return self._usedup

    @usedup.setter
    def usedup(self, usedup: float):
        """Sets the usedup of this LimitsResponseInnerPurchaseTransactionsMonthly.


        :param usedup: The usedup of this LimitsResponseInnerPurchaseTransactionsMonthly.
        :type usedup: float
        """

        self._usedup = usedup
