# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.meta_info import MetaInfo  # noqa: F401,E501
from swagger_server import util


class GetTransactionsResSub(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: float=None, transaction_id: float=None, account_number: str=None, timestamp: float=None, amount: float=None, currency: str=None, debit_or_credit: str=None, description: str=None, payment_mode: str=None, dba_names: str=None, status: str=None, closing_balance: float=None, transaciton_type: str=None, ach_code: str=None, mcc_code: str=None, sic_code: str=None, name: str=None, address: str=None, street: str=None, city: str=None, state: str=None, zip: str=None, country: str=None, phone_number: float=None, meta_info: List[MetaInfo]=None):  # noqa: E501
        """GetTransactionsResSub - a model defined in Swagger

        :param customer_id: The customer_id of this GetTransactionsResSub.  # noqa: E501
        :type customer_id: float
        :param transaction_id: The transaction_id of this GetTransactionsResSub.  # noqa: E501
        :type transaction_id: float
        :param account_number: The account_number of this GetTransactionsResSub.  # noqa: E501
        :type account_number: str
        :param timestamp: The timestamp of this GetTransactionsResSub.  # noqa: E501
        :type timestamp: float
        :param amount: The amount of this GetTransactionsResSub.  # noqa: E501
        :type amount: float
        :param currency: The currency of this GetTransactionsResSub.  # noqa: E501
        :type currency: str
        :param debit_or_credit: The debit_or_credit of this GetTransactionsResSub.  # noqa: E501
        :type debit_or_credit: str
        :param description: The description of this GetTransactionsResSub.  # noqa: E501
        :type description: str
        :param payment_mode: The payment_mode of this GetTransactionsResSub.  # noqa: E501
        :type payment_mode: str
        :param dba_names: The dba_names of this GetTransactionsResSub.  # noqa: E501
        :type dba_names: str
        :param status: The status of this GetTransactionsResSub.  # noqa: E501
        :type status: str
        :param closing_balance: The closing_balance of this GetTransactionsResSub.  # noqa: E501
        :type closing_balance: float
        :param transaciton_type: The transaciton_type of this GetTransactionsResSub.  # noqa: E501
        :type transaciton_type: str
        :param ach_code: The ach_code of this GetTransactionsResSub.  # noqa: E501
        :type ach_code: str
        :param mcc_code: The mcc_code of this GetTransactionsResSub.  # noqa: E501
        :type mcc_code: str
        :param sic_code: The sic_code of this GetTransactionsResSub.  # noqa: E501
        :type sic_code: str
        :param name: The name of this GetTransactionsResSub.  # noqa: E501
        :type name: str
        :param address: The address of this GetTransactionsResSub.  # noqa: E501
        :type address: str
        :param street: The street of this GetTransactionsResSub.  # noqa: E501
        :type street: str
        :param city: The city of this GetTransactionsResSub.  # noqa: E501
        :type city: str
        :param state: The state of this GetTransactionsResSub.  # noqa: E501
        :type state: str
        :param zip: The zip of this GetTransactionsResSub.  # noqa: E501
        :type zip: str
        :param country: The country of this GetTransactionsResSub.  # noqa: E501
        :type country: str
        :param phone_number: The phone_number of this GetTransactionsResSub.  # noqa: E501
        :type phone_number: float
        :param meta_info: The meta_info of this GetTransactionsResSub.  # noqa: E501
        :type meta_info: List[MetaInfo]
        """
        self.swagger_types = {
            'customer_id': float,
            'transaction_id': float,
            'account_number': str,
            'timestamp': float,
            'amount': float,
            'currency': str,
            'debit_or_credit': str,
            'description': str,
            'payment_mode': str,
            'dba_names': str,
            'status': str,
            'closing_balance': float,
            'transaciton_type': str,
            'ach_code': str,
            'mcc_code': str,
            'sic_code': str,
            'name': str,
            'address': str,
            'street': str,
            'city': str,
            'state': str,
            'zip': str,
            'country': str,
            'phone_number': float,
            'meta_info': List[MetaInfo]
        }

        self.attribute_map = {
            'customer_id': 'customerId',
            'transaction_id': 'transactionId',
            'account_number': 'accountNumber',
            'timestamp': 'timestamp',
            'amount': 'amount',
            'currency': 'currency',
            'debit_or_credit': 'debitOrCredit',
            'description': 'description',
            'payment_mode': 'paymentMode',
            'dba_names': 'DBANames',
            'status': 'status',
            'closing_balance': 'closingBalance',
            'transaciton_type': 'transacitonType',
            'ach_code': 'ACHCode',
            'mcc_code': 'MCCCode',
            'sic_code': 'SICCode',
            'name': 'name',
            'address': 'address',
            'street': 'street',
            'city': 'city',
            'state': 'state',
            'zip': 'zip',
            'country': 'country',
            'phone_number': 'phoneNumber',
            'meta_info': 'metaInfo'
        }
        self._customer_id = customer_id
        self._transaction_id = transaction_id
        self._account_number = account_number
        self._timestamp = timestamp
        self._amount = amount
        self._currency = currency
        self._debit_or_credit = debit_or_credit
        self._description = description
        self._payment_mode = payment_mode
        self._dba_names = dba_names
        self._status = status
        self._closing_balance = closing_balance
        self._transaciton_type = transaciton_type
        self._ach_code = ach_code
        self._mcc_code = mcc_code
        self._sic_code = sic_code
        self._name = name
        self._address = address
        self._street = street
        self._city = city
        self._state = state
        self._zip = zip
        self._country = country
        self._phone_number = phone_number
        self._meta_info = meta_info

    @classmethod
    def from_dict(cls, dikt) -> 'GetTransactionsResSub':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetTransactionsRes_sub of this GetTransactionsResSub.  # noqa: E501
        :rtype: GetTransactionsResSub
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this GetTransactionsResSub.


        :return: The customer_id of this GetTransactionsResSub.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this GetTransactionsResSub.


        :param customer_id: The customer_id of this GetTransactionsResSub.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def transaction_id(self) -> float:
        """Gets the transaction_id of this GetTransactionsResSub.


        :return: The transaction_id of this GetTransactionsResSub.
        :rtype: float
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id: float):
        """Sets the transaction_id of this GetTransactionsResSub.


        :param transaction_id: The transaction_id of this GetTransactionsResSub.
        :type transaction_id: float
        """

        self._transaction_id = transaction_id

    @property
    def account_number(self) -> str:
        """Gets the account_number of this GetTransactionsResSub.


        :return: The account_number of this GetTransactionsResSub.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this GetTransactionsResSub.


        :param account_number: The account_number of this GetTransactionsResSub.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def timestamp(self) -> float:
        """Gets the timestamp of this GetTransactionsResSub.


        :return: The timestamp of this GetTransactionsResSub.
        :rtype: float
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: float):
        """Sets the timestamp of this GetTransactionsResSub.


        :param timestamp: The timestamp of this GetTransactionsResSub.
        :type timestamp: float
        """

        self._timestamp = timestamp

    @property
    def amount(self) -> float:
        """Gets the amount of this GetTransactionsResSub.


        :return: The amount of this GetTransactionsResSub.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount: float):
        """Sets the amount of this GetTransactionsResSub.


        :param amount: The amount of this GetTransactionsResSub.
        :type amount: float
        """

        self._amount = amount

    @property
    def currency(self) -> str:
        """Gets the currency of this GetTransactionsResSub.


        :return: The currency of this GetTransactionsResSub.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this GetTransactionsResSub.


        :param currency: The currency of this GetTransactionsResSub.
        :type currency: str
        """

        self._currency = currency

    @property
    def debit_or_credit(self) -> str:
        """Gets the debit_or_credit of this GetTransactionsResSub.


        :return: The debit_or_credit of this GetTransactionsResSub.
        :rtype: str
        """
        return self._debit_or_credit

    @debit_or_credit.setter
    def debit_or_credit(self, debit_or_credit: str):
        """Sets the debit_or_credit of this GetTransactionsResSub.


        :param debit_or_credit: The debit_or_credit of this GetTransactionsResSub.
        :type debit_or_credit: str
        """

        self._debit_or_credit = debit_or_credit

    @property
    def description(self) -> str:
        """Gets the description of this GetTransactionsResSub.


        :return: The description of this GetTransactionsResSub.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this GetTransactionsResSub.


        :param description: The description of this GetTransactionsResSub.
        :type description: str
        """

        self._description = description

    @property
    def payment_mode(self) -> str:
        """Gets the payment_mode of this GetTransactionsResSub.


        :return: The payment_mode of this GetTransactionsResSub.
        :rtype: str
        """
        return self._payment_mode

    @payment_mode.setter
    def payment_mode(self, payment_mode: str):
        """Sets the payment_mode of this GetTransactionsResSub.


        :param payment_mode: The payment_mode of this GetTransactionsResSub.
        :type payment_mode: str
        """

        self._payment_mode = payment_mode

    @property
    def dba_names(self) -> str:
        """Gets the dba_names of this GetTransactionsResSub.


        :return: The dba_names of this GetTransactionsResSub.
        :rtype: str
        """
        return self._dba_names

    @dba_names.setter
    def dba_names(self, dba_names: str):
        """Sets the dba_names of this GetTransactionsResSub.


        :param dba_names: The dba_names of this GetTransactionsResSub.
        :type dba_names: str
        """

        self._dba_names = dba_names

    @property
    def status(self) -> str:
        """Gets the status of this GetTransactionsResSub.


        :return: The status of this GetTransactionsResSub.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this GetTransactionsResSub.


        :param status: The status of this GetTransactionsResSub.
        :type status: str
        """

        self._status = status

    @property
    def closing_balance(self) -> float:
        """Gets the closing_balance of this GetTransactionsResSub.


        :return: The closing_balance of this GetTransactionsResSub.
        :rtype: float
        """
        return self._closing_balance

    @closing_balance.setter
    def closing_balance(self, closing_balance: float):
        """Sets the closing_balance of this GetTransactionsResSub.


        :param closing_balance: The closing_balance of this GetTransactionsResSub.
        :type closing_balance: float
        """

        self._closing_balance = closing_balance

    @property
    def transaciton_type(self) -> str:
        """Gets the transaciton_type of this GetTransactionsResSub.


        :return: The transaciton_type of this GetTransactionsResSub.
        :rtype: str
        """
        return self._transaciton_type

    @transaciton_type.setter
    def transaciton_type(self, transaciton_type: str):
        """Sets the transaciton_type of this GetTransactionsResSub.


        :param transaciton_type: The transaciton_type of this GetTransactionsResSub.
        :type transaciton_type: str
        """

        self._transaciton_type = transaciton_type

    @property
    def ach_code(self) -> str:
        """Gets the ach_code of this GetTransactionsResSub.


        :return: The ach_code of this GetTransactionsResSub.
        :rtype: str
        """
        return self._ach_code

    @ach_code.setter
    def ach_code(self, ach_code: str):
        """Sets the ach_code of this GetTransactionsResSub.


        :param ach_code: The ach_code of this GetTransactionsResSub.
        :type ach_code: str
        """

        self._ach_code = ach_code

    @property
    def mcc_code(self) -> str:
        """Gets the mcc_code of this GetTransactionsResSub.


        :return: The mcc_code of this GetTransactionsResSub.
        :rtype: str
        """
        return self._mcc_code

    @mcc_code.setter
    def mcc_code(self, mcc_code: str):
        """Sets the mcc_code of this GetTransactionsResSub.


        :param mcc_code: The mcc_code of this GetTransactionsResSub.
        :type mcc_code: str
        """

        self._mcc_code = mcc_code

    @property
    def sic_code(self) -> str:
        """Gets the sic_code of this GetTransactionsResSub.


        :return: The sic_code of this GetTransactionsResSub.
        :rtype: str
        """
        return self._sic_code

    @sic_code.setter
    def sic_code(self, sic_code: str):
        """Sets the sic_code of this GetTransactionsResSub.


        :param sic_code: The sic_code of this GetTransactionsResSub.
        :type sic_code: str
        """

        self._sic_code = sic_code

    @property
    def name(self) -> str:
        """Gets the name of this GetTransactionsResSub.


        :return: The name of this GetTransactionsResSub.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this GetTransactionsResSub.


        :param name: The name of this GetTransactionsResSub.
        :type name: str
        """

        self._name = name

    @property
    def address(self) -> str:
        """Gets the address of this GetTransactionsResSub.


        :return: The address of this GetTransactionsResSub.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this GetTransactionsResSub.


        :param address: The address of this GetTransactionsResSub.
        :type address: str
        """

        self._address = address

    @property
    def street(self) -> str:
        """Gets the street of this GetTransactionsResSub.


        :return: The street of this GetTransactionsResSub.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street: str):
        """Sets the street of this GetTransactionsResSub.


        :param street: The street of this GetTransactionsResSub.
        :type street: str
        """

        self._street = street

    @property
    def city(self) -> str:
        """Gets the city of this GetTransactionsResSub.


        :return: The city of this GetTransactionsResSub.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this GetTransactionsResSub.


        :param city: The city of this GetTransactionsResSub.
        :type city: str
        """

        self._city = city

    @property
    def state(self) -> str:
        """Gets the state of this GetTransactionsResSub.


        :return: The state of this GetTransactionsResSub.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this GetTransactionsResSub.


        :param state: The state of this GetTransactionsResSub.
        :type state: str
        """

        self._state = state

    @property
    def zip(self) -> str:
        """Gets the zip of this GetTransactionsResSub.


        :return: The zip of this GetTransactionsResSub.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip: str):
        """Sets the zip of this GetTransactionsResSub.


        :param zip: The zip of this GetTransactionsResSub.
        :type zip: str
        """

        self._zip = zip

    @property
    def country(self) -> str:
        """Gets the country of this GetTransactionsResSub.


        :return: The country of this GetTransactionsResSub.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this GetTransactionsResSub.


        :param country: The country of this GetTransactionsResSub.
        :type country: str
        """

        self._country = country

    @property
    def phone_number(self) -> float:
        """Gets the phone_number of this GetTransactionsResSub.


        :return: The phone_number of this GetTransactionsResSub.
        :rtype: float
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number: float):
        """Sets the phone_number of this GetTransactionsResSub.


        :param phone_number: The phone_number of this GetTransactionsResSub.
        :type phone_number: float
        """

        self._phone_number = phone_number

    @property
    def meta_info(self) -> List[MetaInfo]:
        """Gets the meta_info of this GetTransactionsResSub.


        :return: The meta_info of this GetTransactionsResSub.
        :rtype: List[MetaInfo]
        """
        return self._meta_info

    @meta_info.setter
    def meta_info(self, meta_info: List[MetaInfo]):
        """Sets the meta_info of this GetTransactionsResSub.


        :param meta_info: The meta_info of this GetTransactionsResSub.
        :type meta_info: List[MetaInfo]
        """

        self._meta_info = meta_info
