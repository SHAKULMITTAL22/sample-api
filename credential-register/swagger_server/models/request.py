# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Request(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, account_name: str=None, account_number: str=None, customer_id: float=None, card_number: str=None, description: str=None, request_sub_type: str=None, request_type: str=None, service_type: str=None, meta: object=None):  # noqa: E501
        """Request - a model defined in Swagger

        :param account_name: The account_name of this Request.  # noqa: E501
        :type account_name: str
        :param account_number: The account_number of this Request.  # noqa: E501
        :type account_number: str
        :param customer_id: The customer_id of this Request.  # noqa: E501
        :type customer_id: float
        :param card_number: The card_number of this Request.  # noqa: E501
        :type card_number: str
        :param description: The description of this Request.  # noqa: E501
        :type description: str
        :param request_sub_type: The request_sub_type of this Request.  # noqa: E501
        :type request_sub_type: str
        :param request_type: The request_type of this Request.  # noqa: E501
        :type request_type: str
        :param service_type: The service_type of this Request.  # noqa: E501
        :type service_type: str
        :param meta: The meta of this Request.  # noqa: E501
        :type meta: object
        """
        self.swagger_types = {
            'account_name': str,
            'account_number': str,
            'customer_id': float,
            'card_number': str,
            'description': str,
            'request_sub_type': str,
            'request_type': str,
            'service_type': str,
            'meta': object
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'account_number': 'accountNumber',
            'customer_id': 'customerId',
            'card_number': 'cardNumber',
            'description': 'description',
            'request_sub_type': 'requestSubType',
            'request_type': 'requestType',
            'service_type': 'serviceType',
            'meta': 'meta'
        }
        self._account_name = account_name
        self._account_number = account_number
        self._customer_id = customer_id
        self._card_number = card_number
        self._description = description
        self._request_sub_type = request_sub_type
        self._request_type = request_type
        self._service_type = service_type
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt) -> 'Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The request of this Request.  # noqa: E501
        :rtype: Request
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self) -> str:
        """Gets the account_name of this Request.


        :return: The account_name of this Request.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name: str):
        """Sets the account_name of this Request.


        :param account_name: The account_name of this Request.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def account_number(self) -> str:
        """Gets the account_number of this Request.


        :return: The account_number of this Request.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this Request.


        :param account_number: The account_number of this Request.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this Request.


        :return: The customer_id of this Request.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this Request.


        :param customer_id: The customer_id of this Request.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def card_number(self) -> str:
        """Gets the card_number of this Request.


        :return: The card_number of this Request.
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number: str):
        """Sets the card_number of this Request.


        :param card_number: The card_number of this Request.
        :type card_number: str
        """

        self._card_number = card_number

    @property
    def description(self) -> str:
        """Gets the description of this Request.


        :return: The description of this Request.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Request.


        :param description: The description of this Request.
        :type description: str
        """

        self._description = description

    @property
    def request_sub_type(self) -> str:
        """Gets the request_sub_type of this Request.


        :return: The request_sub_type of this Request.
        :rtype: str
        """
        return self._request_sub_type

    @request_sub_type.setter
    def request_sub_type(self, request_sub_type: str):
        """Sets the request_sub_type of this Request.


        :param request_sub_type: The request_sub_type of this Request.
        :type request_sub_type: str
        """

        self._request_sub_type = request_sub_type

    @property
    def request_type(self) -> str:
        """Gets the request_type of this Request.


        :return: The request_type of this Request.
        :rtype: str
        """
        return self._request_type

    @request_type.setter
    def request_type(self, request_type: str):
        """Sets the request_type of this Request.


        :param request_type: The request_type of this Request.
        :type request_type: str
        """

        self._request_type = request_type

    @property
    def service_type(self) -> str:
        """Gets the service_type of this Request.


        :return: The service_type of this Request.
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type: str):
        """Sets the service_type of this Request.


        :param service_type: The service_type of this Request.
        :type service_type: str
        """

        self._service_type = service_type

    @property
    def meta(self) -> object:
        """Gets the meta of this Request.


        :return: The meta of this Request.
        :rtype: object
        """
        return self._meta

    @meta.setter
    def meta(self, meta: object):
        """Sets the meta of this Request.


        :param meta: The meta of this Request.
        :type meta: object
        """

        self._meta = meta
