# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.email_request_meta import EmailRequestMeta  # noqa: F401,E501
from swagger_server import util


class EmailRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: float=None, account_number: str=None, document_type: str=None, meta: EmailRequestMeta=None):  # noqa: E501
        """EmailRequest - a model defined in Swagger

        :param customer_id: The customer_id of this EmailRequest.  # noqa: E501
        :type customer_id: float
        :param account_number: The account_number of this EmailRequest.  # noqa: E501
        :type account_number: str
        :param document_type: The document_type of this EmailRequest.  # noqa: E501
        :type document_type: str
        :param meta: The meta of this EmailRequest.  # noqa: E501
        :type meta: EmailRequestMeta
        """
        self.swagger_types = {
            'customer_id': float,
            'account_number': str,
            'document_type': str,
            'meta': EmailRequestMeta
        }

        self.attribute_map = {
            'customer_id': 'customerId',
            'account_number': 'accountNumber',
            'document_type': 'documentType',
            'meta': 'meta'
        }
        self._customer_id = customer_id
        self._account_number = account_number
        self._document_type = document_type
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt) -> 'EmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The emailRequest of this EmailRequest.  # noqa: E501
        :rtype: EmailRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this EmailRequest.


        :return: The customer_id of this EmailRequest.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this EmailRequest.


        :param customer_id: The customer_id of this EmailRequest.
        :type customer_id: float
        """
        if customer_id is None:
            raise ValueError("Invalid value for `customer_id`, must not be `None`")  # noqa: E501

        self._customer_id = customer_id

    @property
    def account_number(self) -> str:
        """Gets the account_number of this EmailRequest.


        :return: The account_number of this EmailRequest.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this EmailRequest.


        :param account_number: The account_number of this EmailRequest.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def document_type(self) -> str:
        """Gets the document_type of this EmailRequest.


        :return: The document_type of this EmailRequest.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type: str):
        """Sets the document_type of this EmailRequest.


        :param document_type: The document_type of this EmailRequest.
        :type document_type: str
        """

        self._document_type = document_type

    @property
    def meta(self) -> EmailRequestMeta:
        """Gets the meta of this EmailRequest.


        :return: The meta of this EmailRequest.
        :rtype: EmailRequestMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta: EmailRequestMeta):
        """Sets the meta of this EmailRequest.


        :param meta: The meta of this EmailRequest.
        :type meta: EmailRequestMeta
        """

        self._meta = meta
