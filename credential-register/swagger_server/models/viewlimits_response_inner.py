# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.limits_response_inner_purchase import LimitsResponseInnerPurchase  # noqa: F401,E501
from swagger_server.models.viewlimits_response_inner_txns_per_day import ViewlimitsResponseInnerTxnsPerDay  # noqa: F401,E501
from swagger_server import util


class ViewlimitsResponseInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, currency: str=None, customer_id: float=None, per_txn: float=None, purchase: LimitsResponseInnerPurchase=None, txns_per_day: ViewlimitsResponseInnerTxnsPerDay=None, withdrawal: LimitsResponseInnerPurchase=None):  # noqa: E501
        """ViewlimitsResponseInner - a model defined in Swagger

        :param currency: The currency of this ViewlimitsResponseInner.  # noqa: E501
        :type currency: str
        :param customer_id: The customer_id of this ViewlimitsResponseInner.  # noqa: E501
        :type customer_id: float
        :param per_txn: The per_txn of this ViewlimitsResponseInner.  # noqa: E501
        :type per_txn: float
        :param purchase: The purchase of this ViewlimitsResponseInner.  # noqa: E501
        :type purchase: LimitsResponseInnerPurchase
        :param txns_per_day: The txns_per_day of this ViewlimitsResponseInner.  # noqa: E501
        :type txns_per_day: ViewlimitsResponseInnerTxnsPerDay
        :param withdrawal: The withdrawal of this ViewlimitsResponseInner.  # noqa: E501
        :type withdrawal: LimitsResponseInnerPurchase
        """
        self.swagger_types = {
            'currency': str,
            'customer_id': float,
            'per_txn': float,
            'purchase': LimitsResponseInnerPurchase,
            'txns_per_day': ViewlimitsResponseInnerTxnsPerDay,
            'withdrawal': LimitsResponseInnerPurchase
        }

        self.attribute_map = {
            'currency': 'currency',
            'customer_id': 'customerId',
            'per_txn': 'perTxn',
            'purchase': 'purchase',
            'txns_per_day': 'txnsPerDay',
            'withdrawal': 'withdrawal'
        }
        self._currency = currency
        self._customer_id = customer_id
        self._per_txn = per_txn
        self._purchase = purchase
        self._txns_per_day = txns_per_day
        self._withdrawal = withdrawal

    @classmethod
    def from_dict(cls, dikt) -> 'ViewlimitsResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The viewlimitsResponse_inner of this ViewlimitsResponseInner.  # noqa: E501
        :rtype: ViewlimitsResponseInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self) -> str:
        """Gets the currency of this ViewlimitsResponseInner.


        :return: The currency of this ViewlimitsResponseInner.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this ViewlimitsResponseInner.


        :param currency: The currency of this ViewlimitsResponseInner.
        :type currency: str
        """

        self._currency = currency

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this ViewlimitsResponseInner.


        :return: The customer_id of this ViewlimitsResponseInner.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this ViewlimitsResponseInner.


        :param customer_id: The customer_id of this ViewlimitsResponseInner.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def per_txn(self) -> float:
        """Gets the per_txn of this ViewlimitsResponseInner.


        :return: The per_txn of this ViewlimitsResponseInner.
        :rtype: float
        """
        return self._per_txn

    @per_txn.setter
    def per_txn(self, per_txn: float):
        """Sets the per_txn of this ViewlimitsResponseInner.


        :param per_txn: The per_txn of this ViewlimitsResponseInner.
        :type per_txn: float
        """

        self._per_txn = per_txn

    @property
    def purchase(self) -> LimitsResponseInnerPurchase:
        """Gets the purchase of this ViewlimitsResponseInner.


        :return: The purchase of this ViewlimitsResponseInner.
        :rtype: LimitsResponseInnerPurchase
        """
        return self._purchase

    @purchase.setter
    def purchase(self, purchase: LimitsResponseInnerPurchase):
        """Sets the purchase of this ViewlimitsResponseInner.


        :param purchase: The purchase of this ViewlimitsResponseInner.
        :type purchase: LimitsResponseInnerPurchase
        """

        self._purchase = purchase

    @property
    def txns_per_day(self) -> ViewlimitsResponseInnerTxnsPerDay:
        """Gets the txns_per_day of this ViewlimitsResponseInner.


        :return: The txns_per_day of this ViewlimitsResponseInner.
        :rtype: ViewlimitsResponseInnerTxnsPerDay
        """
        return self._txns_per_day

    @txns_per_day.setter
    def txns_per_day(self, txns_per_day: ViewlimitsResponseInnerTxnsPerDay):
        """Sets the txns_per_day of this ViewlimitsResponseInner.


        :param txns_per_day: The txns_per_day of this ViewlimitsResponseInner.
        :type txns_per_day: ViewlimitsResponseInnerTxnsPerDay
        """

        self._txns_per_day = txns_per_day

    @property
    def withdrawal(self) -> LimitsResponseInnerPurchase:
        """Gets the withdrawal of this ViewlimitsResponseInner.


        :return: The withdrawal of this ViewlimitsResponseInner.
        :rtype: LimitsResponseInnerPurchase
        """
        return self._withdrawal

    @withdrawal.setter
    def withdrawal(self, withdrawal: LimitsResponseInnerPurchase):
        """Sets the withdrawal of this ViewlimitsResponseInner.


        :param withdrawal: The withdrawal of this ViewlimitsResponseInner.
        :type withdrawal: LimitsResponseInnerPurchase
        """

        self._withdrawal = withdrawal
