# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.deposit_request_image import DepositRequestImage  # noqa: F401,E501
from swagger_server import util


class DepositRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: float=None, source_account_id: str=None, amount: str=None, currency: str=None, image: DepositRequestImage=None):  # noqa: E501
        """DepositRequest - a model defined in Swagger

        :param customer_id: The customer_id of this DepositRequest.  # noqa: E501
        :type customer_id: float
        :param source_account_id: The source_account_id of this DepositRequest.  # noqa: E501
        :type source_account_id: str
        :param amount: The amount of this DepositRequest.  # noqa: E501
        :type amount: str
        :param currency: The currency of this DepositRequest.  # noqa: E501
        :type currency: str
        :param image: The image of this DepositRequest.  # noqa: E501
        :type image: DepositRequestImage
        """
        self.swagger_types = {
            'customer_id': float,
            'source_account_id': str,
            'amount': str,
            'currency': str,
            'image': DepositRequestImage
        }

        self.attribute_map = {
            'customer_id': 'customerId',
            'source_account_id': 'sourceAccountId',
            'amount': 'amount',
            'currency': 'currency',
            'image': 'image'
        }
        self._customer_id = customer_id
        self._source_account_id = source_account_id
        self._amount = amount
        self._currency = currency
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'DepositRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The depositRequest of this DepositRequest.  # noqa: E501
        :rtype: DepositRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> float:
        """Gets the customer_id of this DepositRequest.


        :return: The customer_id of this DepositRequest.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: float):
        """Sets the customer_id of this DepositRequest.


        :param customer_id: The customer_id of this DepositRequest.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def source_account_id(self) -> str:
        """Gets the source_account_id of this DepositRequest.


        :return: The source_account_id of this DepositRequest.
        :rtype: str
        """
        return self._source_account_id

    @source_account_id.setter
    def source_account_id(self, source_account_id: str):
        """Sets the source_account_id of this DepositRequest.


        :param source_account_id: The source_account_id of this DepositRequest.
        :type source_account_id: str
        """

        self._source_account_id = source_account_id

    @property
    def amount(self) -> str:
        """Gets the amount of this DepositRequest.


        :return: The amount of this DepositRequest.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount: str):
        """Sets the amount of this DepositRequest.


        :param amount: The amount of this DepositRequest.
        :type amount: str
        """

        self._amount = amount

    @property
    def currency(self) -> str:
        """Gets the currency of this DepositRequest.


        :return: The currency of this DepositRequest.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this DepositRequest.


        :param currency: The currency of this DepositRequest.
        :type currency: str
        """

        self._currency = currency

    @property
    def image(self) -> DepositRequestImage:
        """Gets the image of this DepositRequest.


        :return: The image of this DepositRequest.
        :rtype: DepositRequestImage
        """
        return self._image

    @image.setter
    def image(self, image: DepositRequestImage):
        """Sets the image of this DepositRequest.


        :param image: The image of this DepositRequest.
        :type image: DepositRequestImage
        """

        self._image = image
