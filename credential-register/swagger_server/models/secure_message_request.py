# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SecureMessageRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, auth_type: str=None, first_name: str=None, last_name: str=None, email: str=None, phone_number: float=None, topic: str=None, message: str=None, available_time: str=None, chat_history: str=None, cif: float=None):  # noqa: E501
        """SecureMessageRequest - a model defined in Swagger

        :param auth_type: The auth_type of this SecureMessageRequest.  # noqa: E501
        :type auth_type: str
        :param first_name: The first_name of this SecureMessageRequest.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this SecureMessageRequest.  # noqa: E501
        :type last_name: str
        :param email: The email of this SecureMessageRequest.  # noqa: E501
        :type email: str
        :param phone_number: The phone_number of this SecureMessageRequest.  # noqa: E501
        :type phone_number: float
        :param topic: The topic of this SecureMessageRequest.  # noqa: E501
        :type topic: str
        :param message: The message of this SecureMessageRequest.  # noqa: E501
        :type message: str
        :param available_time: The available_time of this SecureMessageRequest.  # noqa: E501
        :type available_time: str
        :param chat_history: The chat_history of this SecureMessageRequest.  # noqa: E501
        :type chat_history: str
        :param cif: The cif of this SecureMessageRequest.  # noqa: E501
        :type cif: float
        """
        self.swagger_types = {
            'auth_type': str,
            'first_name': str,
            'last_name': str,
            'email': str,
            'phone_number': float,
            'topic': str,
            'message': str,
            'available_time': str,
            'chat_history': str,
            'cif': float
        }

        self.attribute_map = {
            'auth_type': 'authType',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'email': 'email',
            'phone_number': 'phoneNumber',
            'topic': 'topic',
            'message': 'message',
            'available_time': 'availableTime',
            'chat_history': 'chatHistory',
            'cif': 'cif'
        }
        self._auth_type = auth_type
        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._phone_number = phone_number
        self._topic = topic
        self._message = message
        self._available_time = available_time
        self._chat_history = chat_history
        self._cif = cif

    @classmethod
    def from_dict(cls, dikt) -> 'SecureMessageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecureMessageRequest of this SecureMessageRequest.  # noqa: E501
        :rtype: SecureMessageRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_type(self) -> str:
        """Gets the auth_type of this SecureMessageRequest.


        :return: The auth_type of this SecureMessageRequest.
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type: str):
        """Sets the auth_type of this SecureMessageRequest.


        :param auth_type: The auth_type of this SecureMessageRequest.
        :type auth_type: str
        """

        self._auth_type = auth_type

    @property
    def first_name(self) -> str:
        """Gets the first_name of this SecureMessageRequest.


        :return: The first_name of this SecureMessageRequest.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this SecureMessageRequest.


        :param first_name: The first_name of this SecureMessageRequest.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this SecureMessageRequest.


        :return: The last_name of this SecureMessageRequest.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this SecureMessageRequest.


        :param last_name: The last_name of this SecureMessageRequest.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self) -> str:
        """Gets the email of this SecureMessageRequest.


        :return: The email of this SecureMessageRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this SecureMessageRequest.


        :param email: The email of this SecureMessageRequest.
        :type email: str
        """

        self._email = email

    @property
    def phone_number(self) -> float:
        """Gets the phone_number of this SecureMessageRequest.


        :return: The phone_number of this SecureMessageRequest.
        :rtype: float
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number: float):
        """Sets the phone_number of this SecureMessageRequest.


        :param phone_number: The phone_number of this SecureMessageRequest.
        :type phone_number: float
        """

        self._phone_number = phone_number

    @property
    def topic(self) -> str:
        """Gets the topic of this SecureMessageRequest.


        :return: The topic of this SecureMessageRequest.
        :rtype: str
        """
        return self._topic

    @topic.setter
    def topic(self, topic: str):
        """Sets the topic of this SecureMessageRequest.


        :param topic: The topic of this SecureMessageRequest.
        :type topic: str
        """

        self._topic = topic

    @property
    def message(self) -> str:
        """Gets the message of this SecureMessageRequest.


        :return: The message of this SecureMessageRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this SecureMessageRequest.


        :param message: The message of this SecureMessageRequest.
        :type message: str
        """

        self._message = message

    @property
    def available_time(self) -> str:
        """Gets the available_time of this SecureMessageRequest.


        :return: The available_time of this SecureMessageRequest.
        :rtype: str
        """
        return self._available_time

    @available_time.setter
    def available_time(self, available_time: str):
        """Sets the available_time of this SecureMessageRequest.


        :param available_time: The available_time of this SecureMessageRequest.
        :type available_time: str
        """

        self._available_time = available_time

    @property
    def chat_history(self) -> str:
        """Gets the chat_history of this SecureMessageRequest.


        :return: The chat_history of this SecureMessageRequest.
        :rtype: str
        """
        return self._chat_history

    @chat_history.setter
    def chat_history(self, chat_history: str):
        """Sets the chat_history of this SecureMessageRequest.


        :param chat_history: The chat_history of this SecureMessageRequest.
        :type chat_history: str
        """

        self._chat_history = chat_history

    @property
    def cif(self) -> float:
        """Gets the cif of this SecureMessageRequest.


        :return: The cif of this SecureMessageRequest.
        :rtype: float
        """
        return self._cif

    @cif.setter
    def cif(self, cif: float):
        """Sets the cif of this SecureMessageRequest.


        :param cif: The cif of this SecureMessageRequest.
        :type cif: float
        """

        self._cif = cif
