# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GetAccountDataAccountsAutopay(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, enabled: bool=None, source_account_id: str=None, payment_type: str=None, on_statement_date: bool=None, day_of_month: str=None):  # noqa: E501
        """GetAccountDataAccountsAutopay - a model defined in Swagger

        :param enabled: The enabled of this GetAccountDataAccountsAutopay.  # noqa: E501
        :type enabled: bool
        :param source_account_id: The source_account_id of this GetAccountDataAccountsAutopay.  # noqa: E501
        :type source_account_id: str
        :param payment_type: The payment_type of this GetAccountDataAccountsAutopay.  # noqa: E501
        :type payment_type: str
        :param on_statement_date: The on_statement_date of this GetAccountDataAccountsAutopay.  # noqa: E501
        :type on_statement_date: bool
        :param day_of_month: The day_of_month of this GetAccountDataAccountsAutopay.  # noqa: E501
        :type day_of_month: str
        """
        self.swagger_types = {
            'enabled': bool,
            'source_account_id': str,
            'payment_type': str,
            'on_statement_date': bool,
            'day_of_month': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'source_account_id': 'sourceAccountId',
            'payment_type': 'paymentType',
            'on_statement_date': 'onStatementDate',
            'day_of_month': 'dayOfMonth'
        }
        self._enabled = enabled
        self._source_account_id = source_account_id
        self._payment_type = payment_type
        self._on_statement_date = on_statement_date
        self._day_of_month = day_of_month

    @classmethod
    def from_dict(cls, dikt) -> 'GetAccountDataAccountsAutopay':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getAccountData_accounts_autopay of this GetAccountDataAccountsAutopay.  # noqa: E501
        :rtype: GetAccountDataAccountsAutopay
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self) -> bool:
        """Gets the enabled of this GetAccountDataAccountsAutopay.


        :return: The enabled of this GetAccountDataAccountsAutopay.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: bool):
        """Sets the enabled of this GetAccountDataAccountsAutopay.


        :param enabled: The enabled of this GetAccountDataAccountsAutopay.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def source_account_id(self) -> str:
        """Gets the source_account_id of this GetAccountDataAccountsAutopay.


        :return: The source_account_id of this GetAccountDataAccountsAutopay.
        :rtype: str
        """
        return self._source_account_id

    @source_account_id.setter
    def source_account_id(self, source_account_id: str):
        """Sets the source_account_id of this GetAccountDataAccountsAutopay.


        :param source_account_id: The source_account_id of this GetAccountDataAccountsAutopay.
        :type source_account_id: str
        """

        self._source_account_id = source_account_id

    @property
    def payment_type(self) -> str:
        """Gets the payment_type of this GetAccountDataAccountsAutopay.


        :return: The payment_type of this GetAccountDataAccountsAutopay.
        :rtype: str
        """
        return self._payment_type

    @payment_type.setter
    def payment_type(self, payment_type: str):
        """Sets the payment_type of this GetAccountDataAccountsAutopay.


        :param payment_type: The payment_type of this GetAccountDataAccountsAutopay.
        :type payment_type: str
        """

        self._payment_type = payment_type

    @property
    def on_statement_date(self) -> bool:
        """Gets the on_statement_date of this GetAccountDataAccountsAutopay.


        :return: The on_statement_date of this GetAccountDataAccountsAutopay.
        :rtype: bool
        """
        return self._on_statement_date

    @on_statement_date.setter
    def on_statement_date(self, on_statement_date: bool):
        """Sets the on_statement_date of this GetAccountDataAccountsAutopay.


        :param on_statement_date: The on_statement_date of this GetAccountDataAccountsAutopay.
        :type on_statement_date: bool
        """

        self._on_statement_date = on_statement_date

    @property
    def day_of_month(self) -> str:
        """Gets the day_of_month of this GetAccountDataAccountsAutopay.


        :return: The day_of_month of this GetAccountDataAccountsAutopay.
        :rtype: str
        """
        return self._day_of_month

    @day_of_month.setter
    def day_of_month(self, day_of_month: str):
        """Sets the day_of_month of this GetAccountDataAccountsAutopay.


        :param day_of_month: The day_of_month of this GetAccountDataAccountsAutopay.
        :type day_of_month: str
        """

        self._day_of_month = day_of_month
