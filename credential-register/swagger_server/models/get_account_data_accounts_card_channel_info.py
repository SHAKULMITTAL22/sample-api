# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.get_account_data_accounts_card_channel_info_atm import GetAccountDataAccountsCardChannelInfoATM  # noqa: F401,E501
from swagger_server import util


class GetAccountDataAccountsCardChannelInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, atm: GetAccountDataAccountsCardChannelInfoATM=None, offline: GetAccountDataAccountsCardChannelInfoATM=None, international: GetAccountDataAccountsCardChannelInfoATM=None, online: GetAccountDataAccountsCardChannelInfoATM=None, contactless: GetAccountDataAccountsCardChannelInfoATM=None):  # noqa: E501
        """GetAccountDataAccountsCardChannelInfo - a model defined in Swagger

        :param atm: The atm of this GetAccountDataAccountsCardChannelInfo.  # noqa: E501
        :type atm: GetAccountDataAccountsCardChannelInfoATM
        :param offline: The offline of this GetAccountDataAccountsCardChannelInfo.  # noqa: E501
        :type offline: GetAccountDataAccountsCardChannelInfoATM
        :param international: The international of this GetAccountDataAccountsCardChannelInfo.  # noqa: E501
        :type international: GetAccountDataAccountsCardChannelInfoATM
        :param online: The online of this GetAccountDataAccountsCardChannelInfo.  # noqa: E501
        :type online: GetAccountDataAccountsCardChannelInfoATM
        :param contactless: The contactless of this GetAccountDataAccountsCardChannelInfo.  # noqa: E501
        :type contactless: GetAccountDataAccountsCardChannelInfoATM
        """
        self.swagger_types = {
            'atm': GetAccountDataAccountsCardChannelInfoATM,
            'offline': GetAccountDataAccountsCardChannelInfoATM,
            'international': GetAccountDataAccountsCardChannelInfoATM,
            'online': GetAccountDataAccountsCardChannelInfoATM,
            'contactless': GetAccountDataAccountsCardChannelInfoATM
        }

        self.attribute_map = {
            'atm': 'ATM',
            'offline': 'offline',
            'international': 'international',
            'online': 'online',
            'contactless': 'contactless'
        }
        self._atm = atm
        self._offline = offline
        self._international = international
        self._online = online
        self._contactless = contactless

    @classmethod
    def from_dict(cls, dikt) -> 'GetAccountDataAccountsCardChannelInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getAccountData_accounts_cardChannelInfo of this GetAccountDataAccountsCardChannelInfo.  # noqa: E501
        :rtype: GetAccountDataAccountsCardChannelInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def atm(self) -> GetAccountDataAccountsCardChannelInfoATM:
        """Gets the atm of this GetAccountDataAccountsCardChannelInfo.


        :return: The atm of this GetAccountDataAccountsCardChannelInfo.
        :rtype: GetAccountDataAccountsCardChannelInfoATM
        """
        return self._atm

    @atm.setter
    def atm(self, atm: GetAccountDataAccountsCardChannelInfoATM):
        """Sets the atm of this GetAccountDataAccountsCardChannelInfo.


        :param atm: The atm of this GetAccountDataAccountsCardChannelInfo.
        :type atm: GetAccountDataAccountsCardChannelInfoATM
        """

        self._atm = atm

    @property
    def offline(self) -> GetAccountDataAccountsCardChannelInfoATM:
        """Gets the offline of this GetAccountDataAccountsCardChannelInfo.


        :return: The offline of this GetAccountDataAccountsCardChannelInfo.
        :rtype: GetAccountDataAccountsCardChannelInfoATM
        """
        return self._offline

    @offline.setter
    def offline(self, offline: GetAccountDataAccountsCardChannelInfoATM):
        """Sets the offline of this GetAccountDataAccountsCardChannelInfo.


        :param offline: The offline of this GetAccountDataAccountsCardChannelInfo.
        :type offline: GetAccountDataAccountsCardChannelInfoATM
        """

        self._offline = offline

    @property
    def international(self) -> GetAccountDataAccountsCardChannelInfoATM:
        """Gets the international of this GetAccountDataAccountsCardChannelInfo.


        :return: The international of this GetAccountDataAccountsCardChannelInfo.
        :rtype: GetAccountDataAccountsCardChannelInfoATM
        """
        return self._international

    @international.setter
    def international(self, international: GetAccountDataAccountsCardChannelInfoATM):
        """Sets the international of this GetAccountDataAccountsCardChannelInfo.


        :param international: The international of this GetAccountDataAccountsCardChannelInfo.
        :type international: GetAccountDataAccountsCardChannelInfoATM
        """

        self._international = international

    @property
    def online(self) -> GetAccountDataAccountsCardChannelInfoATM:
        """Gets the online of this GetAccountDataAccountsCardChannelInfo.


        :return: The online of this GetAccountDataAccountsCardChannelInfo.
        :rtype: GetAccountDataAccountsCardChannelInfoATM
        """
        return self._online

    @online.setter
    def online(self, online: GetAccountDataAccountsCardChannelInfoATM):
        """Sets the online of this GetAccountDataAccountsCardChannelInfo.


        :param online: The online of this GetAccountDataAccountsCardChannelInfo.
        :type online: GetAccountDataAccountsCardChannelInfoATM
        """

        self._online = online

    @property
    def contactless(self) -> GetAccountDataAccountsCardChannelInfoATM:
        """Gets the contactless of this GetAccountDataAccountsCardChannelInfo.


        :return: The contactless of this GetAccountDataAccountsCardChannelInfo.
        :rtype: GetAccountDataAccountsCardChannelInfoATM
        """
        return self._contactless

    @contactless.setter
    def contactless(self, contactless: GetAccountDataAccountsCardChannelInfoATM):
        """Sets the contactless of this GetAccountDataAccountsCardChannelInfo.


        :param contactless: The contactless of this GetAccountDataAccountsCardChannelInfo.
        :type contactless: GetAccountDataAccountsCardChannelInfoATM
        """

        self._contactless = contactless
