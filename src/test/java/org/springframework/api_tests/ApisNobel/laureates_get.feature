# ********RoostGPT********

# Test generated by RoostGPT for test swagger-api-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=ff433d7857
# 
# 

# ********RoostGPT********
Feature: Test the Laureates API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Validate successful Laureates data retrieval with valid parameters
    Given path '2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param gender = <gender>
    When method GET
    Then status 200
    And match response.laureates == '#array'
    And match response.laureates[*].id == '#number'
    And match response.laureates[*].laureateIfPerson.knownName.en == '#string'
    And match response.laureates[*].laureateIfPerson.birth.date == '#string'
    And match response.laureates[*].laureateIfOrg.orgName.se == '#string'
    And match response.laureates[*].nobelPrizes[*].awardYear == '#number'
    And match response.meta.offset == '#number'
    And match response.meta.limit == '#number'
    And match response.links[*].first == '#string'
    And match response.links[*].self == '#string'
    And match response.links[*].last == '#string'

    Examples:
      | read('laureates_get.csv') |

  Scenario: Validate Laureates data retrieval with invalid parameters
    Given path '2.1/laureates'
    And param offset = -1
    And param limit = -5
    When method GET
    Then status 400
    And match response.code == '400'
    And match response.message == '#string'

  Scenario: Validate Laureates not found scenario
    Given path '2.1/laureates'
    And param gender = 'unknown'
    When method GET
    Then status 404
    And match response.code == '404'
    And match response.message == '#string'

  Scenario Outline: Validate Laureates data retrieval with valid date ranges
    Given path '2.1/laureates'
    And param birthDate = <birthDate>
    And param birthDateTo = <birthDateTo>
    When method GET
    Then status 200
    And match response.laureates == '#array'
    And match response.laureates[*].id == '#number'
    And match response.laureates[*].laureateIfPerson.birth.date == '#string'

    Examples:
      | read('laureates_get.csv') |

  Scenario: Validate Unprocessable Entity with invalid date range
    Given path '2.1/laureates'
    And param birthDate = '2000-01-01'
    And param birthDateTo = '1990-12-31'
    When method GET
    Then status 422
    And match response.code == '422'
    And match response.message == '#string'

  Scenario: Validate successful Laureates data retrieval with all parameters
    Given path '2.1/laureates'
    And param offset = 1
    And param limit = 5
    And param sort = 'name'
    And param gender = 'female'
    And param birthDate = '1989-04-25'
    And param deathDate = '2010-05-15'
    And param residence = 'Stockholm'
    When method GET
    Then status 200
    And match response.laureates == '#array'
    And match response.laureates[*].id == '#number'
    And match response.laureates[*].laureateIfPerson.birth.date == '#string'
    And match response.laureates[*].laureateIfPerson.death.date == '#string'
    And match response.laureates[*].residences[*].city.en == '#string'
    And match response.laureates[*].residences[*].locationString.en == '#string'
