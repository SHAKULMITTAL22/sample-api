# ********RoostGPT********

# Test generated by RoostGPT for test api-swagger using AI Type Azure Open AI and AI Model Inference
# 
# Test generated for /icd/s2s/exchange/refundMessage_post for http method type POST in artillery framework
# RoostTestHash=eeed01c3dd
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.test3_API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "icd_s2s_exchange_refundMessage_post_success.csv"
    skipHeader: true
    delimiter: "^|^"
    fields:
      - "headerVersion"
      - "timestamp"
      - "sourceId"
      - "applicationId"
      - "transactionId"
      - "messageContentType"
      - "messageContentEncoding"
      - "payloadHashValue"
      - "hashingAlgorithm"
      - "messageCorrelationContext"
      - "messageCorrelationId"
      - "messageSequenceNumber"
      - "messageSequenceSize"
      - "augmentationKey"
      - "augmentationValue"
      - "remark"
      - "documentNumber"
      - "refundedCoupons"
      - "issuanceDate"
      - "refundIndicator"
      - "refundUID"
      - "relatedRefundUID"
      - "oadCode"
      - "cityPointOfSale"
      - "areaPointOfSale"
      - "countryPointOfSale"
      - "issuerSystem"
      - "fopType"
      - "amount"
      - "currency"
      - "maskedCardNumber"
      - "vendorCode"
      - "binNumber"
      - "lastFour"
      - "refundedFareAmount"
      - "refundedFareCurrency"
      - "refundFee_CancellationPenalityAmount"
      - "refundFee_CancellationPenalityCurrency"
      - "refundFee_TaxOnCancellationPenalityAmount"
      - "refundFee_TaxOnCancellationPenalityCurrency"
      - "refundFee_TaxOnCancellationPenalityTaxISOCode"
      - "refundFee_TaxOnCancellationPenalityTaxCityCode"
      - "refundedFeeAmount"
      - "refundedFeeCurrency"
      - "refundedTaxAmount"
      - "refundedTaxCurrency"
      - "refundedTaxTaxISOCode"
      - "refundedTaxTaxCityCode"
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: "Successful Refund Message Exchange"
    flow:
      - log: "Starting Refund Message Exchange"
      - post:
          url: "/icd/s2s/exchange/refundMessage"
          headers:
            Authorization: "Bearer {{$processEnvironment.test3_AUTH_TOKEN}}"
            Content-Type: "application/json"
          json:
            messageHeader:
              headerVersion: "{{ headerVersion }}"
              timestamp: "{{ timestamp }}"
              sourceContext:
                sourceId: "{{ sourceId }}"
                applicationId: "{{ applicationId }}"
                transactionId: "{{ transactionId }}"
              messageContext:
                messageContentType: "{{ messageContentType }}"
                messageContentEncoding: "{{ messageContentEncoding }}"
                payloadHashValue: "{{ payloadHashValue }}"
                hashingAlgorithm: "{{ hashingAlgorithm }}"
              multiPartMessageContextTypes:
                - messageCorrelationContext: "{{ messageCorrelationContext }}"
                  messageCorrelationId: "{{ messageCorrelationId }}"
                  messageSequenceNumber: "{{ messageSequenceNumber }}"
                  messageSequenceSize: "{{ messageSequenceSize }}"
            augmentationPoint:
              - augmentationKey: "{{ augmentationKey }}"
                augmentationValue: "{{ augmentationValue }}"
            payload:
              refundTransactions:
                remark: "{{ remark }}"
                documentNumber: "{{ documentNumber }}"
                refundedCoupons: [ "{{ refundedCoupons }}" ]
                issuanceDate: "{{ issuanceDate }}"
                refundIndicator: "{{ refundIndicator }}"
                refundUID: "{{ refundUID }}"
                relatedRefundUID: "{{ relatedRefundUID }}"
                oadCode: "{{ oadCode }}"
              refundingAgentDetails:
                cityPointOfSale: "{{ cityPointOfSale }}"
                areaPointOfSale: "{{ areaPointOfSale }}"
                countryPointOfSale: "{{ countryPointOfSale }}"
                issuerSystem: "{{ issuerSystem }}"
              monetaryInformation:
                refundedFormOfPayment:
                  - fopType: "{{ fopType }}"
                    amount:
                      amount: "{{ amount }}"
                      currency: "{{ currency }}"
                    refundedCardDetails:
                      maskedCardNumber: "{{ maskedCardNumber }}"
                      vendorCode: "{{ vendorCode }}"
                      binNumber: "{{ binNumber }}"
                      lastFour: "{{ lastFour }}"
                refundedFare:
                  amount: "{{ refundedFareAmount }}"
                  currency: "{{ refundedFareCurrency }}"
                refundFee_CancellationPenality:
                  amount: "{{ refundFee_CancellationPenalityAmount }}"
                  currency: "{{ refundFee_CancellationPenalityCurrency }}"
                refundFee_TaxOnCancellationPenality:
                  amount: "{{ refundFee_TaxOnCancellationPenalityAmount }}"
                  currency: "{{ refundFee_TaxOnCancellationPenalityCurrency }}"
                  taxISOCode: "{{ refundFee_TaxOnCancellationPenalityTaxISOCode }}"
                  taxCityCode: "{{ refundFee_TaxOnCancellationPenalityTaxCityCode }}"
                refundedFee:
                  amount: "{{ refundedFeeAmount }}"
                  currency: "{{ refundedFeeCurrency }}"
                refundedTax:
                  amount: "{{ refundedTaxAmount }}"
                  currency: "{{ refundedTaxCurrency }}"
                  taxISOCode: "{{ refundedTaxTaxISOCode }}"
                  taxCityCode: "{{ refundedTaxTaxCityCode }}"
      - expect:
          - statusCode: 200
      - hasHeader: "Content-Type"
      - hasProperty: "messageHeader"
      - hasProperty: "messageHeader.headerVersion"
      - hasProperty: "messageHeader.timestamp"
      - hasProperty: "messageHeader.sourceContext"
      - hasProperty: "messageHeader.sourceContext.sourceId"
      - hasProperty: "messageHeader.sourceContext.applicationId"
      - hasProperty: "messageHeader.sourceContext.transactionId"
      - hasProperty: "messageHeader.messageContext"
      - hasProperty: "messageHeader.messageContext.messageContentType"
      - hasProperty: "messageHeader.messageContext.messageContentEncoding"
      - hasProperty: "messageHeader.messageContext.payloadHashValue"
      - hasProperty: "messageHeader.messageContext.hashingAlgorithm"
      - hasProperty: "messageHeader.multiPartMessageContextTypes"
      - hasProperty: "messageHeader.multiPartMessageContextTypes[0].messageCorrelationContext"
      - hasProperty: "messageHeader.multiPartMessageContextTypes[0].messageCorrelationId"
      - hasProperty: "messageHeader.multiPartMessageContextTypes[0].messageSequenceNumber"
      - hasProperty: "messageHeader.multiPartMessageContextTypes[0].messageSequenceSize"
      - hasProperty: "augmentationPoint"
      - hasProperty: "augmentationPoint[0].augmentationKey"
      - hasProperty: "augmentationPoint[0].augmentationValue"
      - hasProperty: "payload"
      - hasProperty: "payload.refundTransactions"
      - hasProperty: "payload.refundTransactions.remark"
      - hasProperty: "payload.refundTransactions.documentNumber"
      - hasProperty: "payload.refundTransactions.refundedCoupons"
      - hasProperty: "payload.refundTransactions.issuanceDate"
      - hasProperty: "payload.refundTransactions.refundIndicator"
      - hasProperty: "payload.refundTransactions.refundUID"
      - hasProperty: "payload.refundTransactions.relatedRefundUID"
      - hasProperty: "payload.refundTransactions.oadCode"
      - hasProperty: "payload.refundingAgentDetails"
      - hasProperty: "payload.refundingAgentDetails.cityPointOfSale"
      - hasProperty: "payload.refundingAgentDetails.areaPointOfSale"
      - hasProperty: "payload.refundingAgentDetails.countryPointOfSale"
      - hasProperty: "payload.refundingAgentDetails.issuerSystem"
      - hasProperty: "payload.monetaryInformation"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].fopType"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].amount"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].amount.amount"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].amount.currency"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].refundedCardDetails"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].refundedCardDetails.maskedCardNumber"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].refundedCardDetails.vendorCode"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].refundedCardDetails.binNumber"
      - hasProperty: "payload.monetaryInformation.refundedFormOfPayment[0].refundedCardDetails.lastFour"
      - hasProperty: "payload.monetaryInformation.refundedFare"
      - hasProperty: "payload.monetaryInformation.refundedFare.amount"
      - hasProperty: "payload.monetaryInformation.refundedFare.currency"
      - hasProperty: "payload.monetaryInformation.refundFee_CancellationPenality"
      - hasProperty: "payload.monetaryInformation.refundFee_CancellationPenality.amount"
      - hasProperty: "payload.monetaryInformation.refundFee_CancellationPenality.currency"
      - hasProperty: "payload.monetaryInformation.refundFee_TaxOnCancellationPenality"
      - hasProperty: "payload.monetaryInformation.refundFee_TaxOnCancellationPenality.amount"
      - hasProperty: "payload.monetaryInformation.refundFee_TaxOnCancellationPenality.currency"
      - hasProperty: "payload.monetaryInformation.refundFee_TaxOnCancellationPenality.taxISOCode"
      - hasProperty: "payload.monetaryInformation.refundFee_TaxOnCancellationPenality.taxCityCode"
      - hasProperty: "payload.monetaryInformation.refundedFee"
      - hasProperty: "payload.monetaryInformation.refundedFee.amount"
      - hasProperty: "payload.monetaryInformation.refundedFee.currency"
      - hasProperty: "payload.monetaryInformation.refundedTax"
      - hasProperty: "payload.monetaryInformation.refundedTax.amount"
      - hasProperty: "payload.monetaryInformation.refundedTax.currency"
      - hasProperty: "payload.monetaryInformation.refundedTax.taxISOCode"
      - hasProperty: "payload.monetaryInformation.refundedTax.taxCityCode"
      - think: 5
